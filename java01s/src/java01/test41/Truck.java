
/*상속
 * -기존의 코드 재사용
 * -기능을 "추가"하거나 변경할 때 기존의 코드를 손대지 않고 하는 방법
 * -굳이 소스가 없어도 된다.
 *  Class 새로 만들 클래스 extends 기존 클래스 {
 * 		 추가할 인스턴스 변수;
 *  	 추가할 메서드(연산자);
 *  }
 *  -상속을 해주는 클래스 super(parent) class
 *  -상속을 받는 클래스: sub(child)class
 *  -상속원리:
 *  super클래스의 모든 변수와 메서드를 가져오는 것은 아니다.
 *  단지, super클래스에 대한 정보를 갖고있을 뿐이다.
 *  =>따라서 서브클래스를 사용하려면 반드시 슈퍼클래스가 있어야한다.
 *  
 * */

package java01.test41;

public class Truck extends Car{
	float weight=1000; //초기화 문장을 통해 변수의 값을 1000Kg로 설정한다.
	boolean autoDump;
	
	//개발자가 클래스에 대해 생성자를 만들지 않으면   컴파일러가 자동으로 기본생성자를 만들어준다.
	public Truck() {
		//생성자를 정의할 때 super class의 생성자를 호출하는 문장을 작성하지 않으면,
		//다음과 같이 super 클래스의 기본 생성자를 호출하는 문장이 자동으로 추가된다.
		//-> 그래서 서브 클래스의 생성자가 실행되기 전에 반드시 super클래스의 생성자가 먼저 실행된다.
		//※주의!!  super클래스의 생성자를 호출하는 문장이 ㅈ ㅔ 일 먼저 와야한다.!!! 아님 오류임
		

		//슈퍼클래스의 기본 생성자가 없으면 다음과 같이 다른 슈퍼클래스의 생성자를 명시적으로 호출해야한다.
		super("미정","미정", 800);
		autoDump=true;
	}
	
}
