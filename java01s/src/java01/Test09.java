/*부동소수점
  
  -상수의 표현
  30f  또는  30F       <=4 바이트 부동 소수점
  30.0 또는 40.0         <=8바이트 부동소수점
  
  -부동소수점? 소수소수점이 움직인다...
  3.14 = 31.4 * 10^-1  = 314 * 10^-2   = 0.314 * 10^1 
  3.14 = 31.4 * 10E-1  = 314 * 10E-2   = 0.314 * 10E1 
  
  - 부동소수점을 메모리에 저장하려면????   +_+
    부동소수점을 "정수부분"과 "지수부분"을 분리하여 저장한다!!
    3.14=>314(정수부) * 10E-2 (지수)
   float ->"24비트"를 정부수로 | "8비트"는 지수부                    총32
 
   float=> 24(정수부)  +8(지수부) => 유효자릿수 6자리, 단정도
   double=> 53(정수부) +11(지수부) => 유효자릿수 15자리,배정도      총64
   
   
  
 */
package java01;

public class Test09 {

	public static void main(String[] args) {
//부동 소수점 표기예		
		float f =  3.14f;
		float f2 = 3.14F;
		float f3 = 31.4E-1f;
		float f4 = 314E-2f;
		float f5 = 0.314E1f;
//소숫점이 왓다갔다해서 부동소수점ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
		
		//다음값은 저장할 수 있지만,,정수부 메모리크기를 넘는 값은0으로 취급한다!
		//★★★★정확한 값을 저장 ㄴㄴ ㅜㅠ
		//오류가 발생하지 않을지라도 주의~!
		float f6 = 34028254354684354163531321000f;
       //            ...... (유효6자리 그 이후엔 ㄷ ㅏ0취급)
/*		//부동소수점 변수에 값을 저장할 때는
		float x =소수점을 뗀 여섯자리;
		double y=소수점을 뗀 열다섯자리; */

	   //주의해야할 예    ☆☆☆☆☆☆☆☆☆
		float i = 3.14159f;
		float j = 15654.7f;  //두 변수 다 유효자리수 6자리지마는
		
		float result = i + j;//조심!!!오류가 안난다는게 함ㅋ정ㅋ
		//result = 15657.84159   //두 값을 더한 결과는 유효자리수를 넘는다..!!!!!헐☆☆☆☆
		
		System.out.println(result); //15657.842 반올림했긔 정확하지 않지 ㅠㅠ
	}

}
